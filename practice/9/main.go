package main

import (
	"fmt"
)

func main() {
	// задаем массив чисел, требующих обработку
	var array = [10]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

	// создаем первый канал, куда будем посылать числа
	ch1 := make(chan int)
	// создаем канал, через который будем сообщать, что работа первого канала завершена
	done1 := make(chan struct{})

	// создаем второй канал, куда будем посылать квадраты чисел
	ch2 := make(chan int)
	// создаем канал, через который будем сообщать, что работа второго канала завершена
	done2 := make(chan struct{})

	// запускаем первую рутину, которая будет получать числа и отправлять их квадраты во второй канал
	go func() {
		// создаем переменную, которая будет хранить в памяти количество обработанных чисел
		var sent int
		for i := range ch1 {
			ch2 <- i * i
			sent++

			// если обработаны все числа - сообщаем, что канал закончил обработку
			if sent == len(array) {
				close(done1)
			}
		}
	}()

	go func() {
		var sent int
		// создаем переменную, которая будет хранить в памяти количество обработанных чисел
		for j := range ch2 {
			sent++
			fmt.Println(j)

			// если обработаны все квадраты чисел - сообщаем, что канал закончил обработку
			if sent == len(array) {
				close(done2)
			}
		}
	}()

	// посылаем все числа в первый канал
	for _, num := range array {
		ch1 <- num
	}

	// ждем пока первый канал получит все числа на обработку и закрываем его
	<-done1
	close(ch1)

	// ждем пока второй канал получит все числа на обработку и закрываем его
	<-done2
	close(ch2)
}
